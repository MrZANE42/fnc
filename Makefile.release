# Release building.
# 'mac' target can be built only on Mac OS X due to lack of usable
# cross-compiler or emulator. 'win' should build on Linux as well.
#
# Dependencies:
# 1) docker installed and functional
# 2) mac: Qt 5 installed and directory with its binaries present in the PATH
# 3) mac: to sign the bundle import secure.cesanta.com:certs/code_sign/* into a
#    separate password-protected keychain

SIGN ?= 0
ifeq ($(SIGN), 1)
	SIGN_OPT="-codesign=Cesanta Software Limited"
else
	SIGN_OPT =
endif

REPO_ROOT = $(shell realpath ..)
BIN_DIR = ./bin
OUT_DIR = ./out

.PHONY: clean mac ubuntu32 ubuntu64 win

mac: $(OUT_DIR) $(OUT_DIR)/FNC-mac.zip
ubuntu32: $(OUT_DIR) $(OUT_DIR)/FNC-ubuntu32.tar.xz
ubuntu64: $(OUT_DIR) $(OUT_DIR)/FNC-ubuntu64.tar.xz
win: $(OUT_DIR) $(OUT_DIR)/FNC-win.zip

$(OUT_DIR)/FNC-mac.zip: $(BIN_DIR)/FNC.app
$(OUT_DIR)/FNC-win.zip: $(BIN_DIR)/FNC.exe
$(OUT_DIR)/FNC-ubuntu32.tar.xz: $(BIN_DIR)/FNC-ubuntu32
$(OUT_DIR)/FNC-ubuntu64.tar.xz: $(BIN_DIR)/FNC-ubuntu64

$(OUT_DIR)/FNC-%.zip:
	cd $(BIN_DIR) && zip -m -r -9 -y ../$@ $(notdir $<)

$(OUT_DIR)/FNC-%.tar.xz:
	cd $(BIN_DIR) && tar cvJf ../$@ $(notdir $<)

$(BIN_DIR) $(OUT_DIR):
	mkdir -p $@

$(BIN_DIR)/FNC.app: $(BIN_DIR)
	qmake && nice make -j 3 && cd src && macdeployqt FNC.app $(SIGN_OPT)
	mv -f src/FNC.app $@
	make distclean

$(BIN_DIR)/FNC.exe: $(BIN_DIR)
	docker run --rm -it -v $(REPO_ROOT):/cesanta cesanta/build_base bash -lcx '\
		cd /cesanta/fnc/src && \
		wine qmake && \
		nice wine mingw32-make -j 3 && \
		mv -f release/FNC.exe ../$@ && \
		rm -rf release Makefile'

$(BIN_DIR)/FNC-ubuntu%: $(BIN_DIR)
	docker run --rm -it -v $(REPO_ROOT):/cesanta \
		docker.cesanta.com:5000/build-ubuntu$*-qt5static:r1 bash -cx '\
			cd /cesanta/fnc && \
			qmake -config static && \
			nice make -j 3 && \
			mv -f src/FNC $@ && \
			make distclean'

clean:
	rm -rf $(BIN_DIR) $(OUT_DIR) Makefile src/Makefile*
